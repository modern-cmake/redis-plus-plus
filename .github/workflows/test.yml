name: Test
on: [ push, pull_request ]
jobs:
  test:
    name: ${{ matrix.os }}, ${{ matrix.cmake_name }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-10.15, ubuntu-20.04 ]
        cmake: [ 3.15, 3.x ]
        include:
          - os: ubuntu-20.04
            tree: tree

          - os: macos-10.15
            tree: find

          - cmake: 3.15
            cmake_name: CMake 3.15
          - cmake: 3.x
            cmake_name: Latest CMake
    runs-on: ${{ matrix.os }}
    steps:
      # System set-up
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: microsoft/vcpkg
          path: vcpkg
      - uses: actions/checkout@v2
        with:
          repository: redis/redis
          path: redis
      - uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: ${{ matrix.cmake }}

      # Install ninja
      - if: runner.os == 'Linux'
        run: sudo apt install ninja-build
      - if: runner.os == 'macOS'
        run: brew install ninja

      # Build and run Redis
      - run: make -j2
        working-directory: redis
      - run: ./redis/src/redis-server --daemonize yes

      # Ready vcpkg
      - run: ./vcpkg/bootstrap-vcpkg.sh
      - run: ./vcpkg/vcpkg install hiredis

      # Static Debug
      - name: "Static Debug: Configure"
        run: >-
          cmake -G Ninja -S . -B build-static-dbg
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_BUILD_TYPE=Debug -DCMAKE_DEBUG_POSTFIX=d -DBUILD_SHARED_LIBS=OFF
      - name: "Static Debug: Build"
        run: cmake --build build-static-dbg
      - name: "Static Debug: Test"
        run: ctest --output-on-failure
        working-directory: build-static-dbg

      # Shared Debug
      - name: "Shared Debug: Configure"
        run: >-
          cmake -G Ninja -S . -B build-shared-dbg
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_BUILD_TYPE=Debug -DCMAKE_DEBUG_POSTFIX=d -DBUILD_SHARED_LIBS=ON
      - name: "Shared Debug: Build"
        run: cmake --build build-shared-dbg
      - name: "Shared Debug: Test"
        run: ctest --output-on-failure
        working-directory: build-shared-dbg

      # Static Release
      - name: "Static Release: Configure"
        run: >-
          cmake -G Ninja -S . -B build-static-rel
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
      - name: "Static Release: Build"
        run: cmake --build build-static-rel
      - name: "Static Release: Test"
        run: ctest --output-on-failure
        working-directory: build-static-rel

      # Shared Release
      - name: "Shared Release: Configure"
        run: >-
          cmake -G Ninja -S . -B build-shared-rel
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON
      - name: "Shared Release: Build"
        run: cmake --build build-shared-rel
      - name: "Shared Release: Test"
        run: ctest --output-on-failure
        working-directory: build-shared-rel

      # Joint install
      - name: Install
        run: |
          cmake --install build-shared-dbg --prefix install
          cmake --install build-static-dbg --prefix install
          cmake --install build-shared-rel --prefix install
          cmake --install build-static-rel --prefix install
      - name: List install tree
        run: ${{matrix.tree}} install

      # Test find_package
      - name: "Test find_package: Static Debug"
        run: >-
          ctest --build-and-test test test-static-dbg
          --build-generator Ninja
          --build-options
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_PREFIX_PATH=${{github.workspace}}/install
          -DCMAKE_BUILD_TYPE=Debug
          -Dredis++_SHARED_LIBS=NO
          --test-command ctest --output-on-failure
      - name: "Test find_package: Static Release"
        run: >-
          ctest --build-and-test test test-static-rel
          --build-generator Ninja
          --build-options
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_PREFIX_PATH=${{github.workspace}}/install
          -DCMAKE_BUILD_TYPE=Release
          -Dredis++_SHARED_LIBS=NO
          --test-command ctest --output-on-failure
      - name: "Test find_package: Shared Debug"
        run: >-
          ctest --build-and-test test test-shared-dbg
          --build-generator Ninja
          --build-options
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_PREFIX_PATH=${{github.workspace}}/install
          -DCMAKE_BUILD_TYPE=Debug
          -Dredis++_SHARED_LIBS=YES
          --test-command ctest --output-on-failure
      - name: "Test find_package: Shared Release"
        run: >-
          ctest --build-and-test test test-shared-rel
          --build-generator Ninja
          --build-options
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_PREFIX_PATH=${{github.workspace}}/install
          -DCMAKE_BUILD_TYPE=Release
          -Dredis++_SHARED_LIBS=YES
          --test-command ctest --output-on-failure
