cmake_minimum_required(VERSION 3.15)

set(redispp_known_comps static shared)
set(redispp_comp_static NO)
set(redispp_comp_shared NO)
foreach (redispp_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
    if (redispp_comp IN_LIST redispp_known_comps)
        set(redispp_comp_${redispp_comp} YES)
    else ()
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "redis++ does not recognize component `${redispp_comp}`.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()
endforeach ()

if (redispp_comp_static AND redispp_comp_shared)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
        "redis++ `static` and `shared` components are mutually exclusive.")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
endif ()

include(CMakeFindDependencyMacro)

set(redispp_static_targets "${CMAKE_CURRENT_LIST_DIR}/redis++-static-targets.cmake")
set(redispp_shared_targets "${CMAKE_CURRENT_LIST_DIR}/redis++-shared-targets.cmake")

macro(redispp_load_targets type)
    if (NOT EXISTS "${redispp_${type}_targets}")
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "redis++ `${type}` libraries were requested but not found.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()

    set(THREADS_PREFER_PTHREAD_FLAG YES)
    find_dependency(Threads)
    find_dependency(hiredis)

    include("${redispp_${type}_targets}")
endmacro()

if (redispp_comp_static)
    redispp_load_targets(static)
elseif (redispp_comp_shared)
    redispp_load_targets(shared)
elseif (DEFINED redis++_SHARED_LIBS AND redis++_SHARED_LIBS)
    redispp_load_targets(shared)
elseif (DEFINED redis++_SHARED_LIBS AND NOT redis++_SHARED_LIBS)
    redispp_load_targets(static)
elseif (BUILD_SHARED_LIBS)
    if (EXISTS "${redispp_shared_targets}")
        redispp_load_targets(shared)
    else ()
        redispp_load_targets(static)
    endif ()
else ()
    if (EXISTS "${redispp_static_targets}")
        redispp_load_targets(static)
    else ()
        redispp_load_targets(shared)
    endif ()
endif ()
